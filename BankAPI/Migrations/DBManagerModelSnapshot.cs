// <auto-generated />
using System;
using BankAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankAPI.Migrations
{
    [DbContext(typeof(DBManager))]
    partial class DBManagerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("BankAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountNumber");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountNumber = 1001,
                            AccountType = "Savings",
                            Balance = 6000m,
                            UserId = 1
                        },
                        new
                        {
                            AccountNumber = 1002,
                            AccountType = "Savings",
                            Balance = 7000m,
                            UserId = 2
                        },
                        new
                        {
                            AccountNumber = 1003,
                            AccountType = "Savings",
                            Balance = 8000m,
                            UserId = 3
                        },
                        new
                        {
                            AccountNumber = 1004,
                            AccountType = "Savings",
                            Balance = 9000m,
                            UserId = 4
                        },
                        new
                        {
                            AccountNumber = 1005,
                            AccountType = "Savings",
                            Balance = 10000m,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("BankAPI.Models.Transactions", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountNumber");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            AccountNumber = 1001,
                            Amount = 6000m,
                            Date = new DateTime(2025, 9, 27, 16, 17, 28, 271, DateTimeKind.Local).AddTicks(5530),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionId = 2,
                            AccountNumber = 1002,
                            Amount = 7000m,
                            Date = new DateTime(2025, 9, 27, 16, 17, 28, 271, DateTimeKind.Local).AddTicks(5557),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionId = 3,
                            AccountNumber = 1003,
                            Amount = 8000m,
                            Date = new DateTime(2025, 9, 27, 16, 17, 28, 271, DateTimeKind.Local).AddTicks(5562),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionId = 4,
                            AccountNumber = 1004,
                            Amount = 9000m,
                            Date = new DateTime(2025, 9, 27, 16, 17, 28, 271, DateTimeKind.Local).AddTicks(5566),
                            TransactionType = "Deposit"
                        },
                        new
                        {
                            TransactionId = 5,
                            AccountNumber = 1005,
                            Amount = 10000m,
                            Date = new DateTime(2025, 9, 27, 16, 17, 28, 271, DateTimeKind.Local).AddTicks(5574),
                            TransactionType = "Deposit"
                        });
                });

            modelBuilder.Entity("BankAPI.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Address = "Random Street",
                            Email = "fangyuan@example.com",
                            Name = "Fang Yuan",
                            Password = "pass123",
                            Phone = "0123456789",
                            Picture = ""
                        },
                        new
                        {
                            UserId = 2,
                            Address = "Random Street",
                            Email = "redfog@example.com",
                            Name = "Red Fog",
                            Password = "pass123",
                            Phone = "0123456789",
                            Picture = ""
                        },
                        new
                        {
                            UserId = 3,
                            Address = "Random Street",
                            Email = "blackevil@example.com",
                            Name = "Black Evil",
                            Password = "pass123",
                            Phone = "0123456789",
                            Picture = ""
                        },
                        new
                        {
                            UserId = 4,
                            Address = "Random Street",
                            Email = "liuchen@example.com",
                            Name = "Liu Chen",
                            Password = "pass123",
                            Phone = "0123456789",
                            Picture = ""
                        },
                        new
                        {
                            UserId = 5,
                            Address = "Random Street",
                            Email = "shenwei@example.com",
                            Name = "Shen Wei",
                            Password = "pass123",
                            Phone = "0123456789",
                            Picture = ""
                        });
                });

            modelBuilder.Entity("BankAPI.Models.Account", b =>
                {
                    b.HasOne("BankAPI.Models.UserProfile", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BankAPI.Models.Transactions", b =>
                {
                    b.HasOne("BankAPI.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("AccountNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
